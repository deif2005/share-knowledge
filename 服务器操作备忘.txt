tomcat启动第一次后访问慢的问题
Tocmat的Session ID是通过SHA1算法计算得到的，计算Session ID的时候必须有一个密钥。为了提高安全性Tomcat在启动的时候回通过随机生成一个密钥.
/dev/random会根据噪音产生随机数，如果噪音不够它就会阻塞。Linux是通过I/O，键盘终端、内存使用量、CPU利用率等方式来收集噪音的，如果噪音不够生成随机数的时候就会被阻塞。用/dev/urandom替换/dev/random，其实还有第三种方式――增大/dev/random的熵池。问题的原因是由于熵池不够大，所以增大它是最彻底的方法。通过cat /proc/sys/kernel/random/entropy_avail
我们可以查看现在的熵池大小；我们需要找到一种方式来提高这个值就行了。如果你的CPU带有DRNG特性，可以充分利用硬件来提高熵池产生的速度 。
通过cat /proc/cpuinfo | grep rdrand
yum install rng-tools
安装rngd服务（熵服务）

systemctl start rngd
启动服务
如果你的CPU不支持DRNG特性或者像我一样使用虚拟机，可以使用/dev/unrandom来模拟。

cp /usr/lib/systemd/system/rngd.service /etc/systemd/system

编辑/etc/systemd/system/rngd.service
service小结，ExecStart=/sbin/rngd -f -r /dev/urandom

systemctl daemon-reload
重新载入服务
systemctl restart rngd
重启服务

新打开一个shell，用dd命令测试随机数。dd if=/dev/random of=random.dat count=40960
[root@localhost bin]# dd if=/dev/random of=random.dat count=40960记录了0+40960 的读入记录了6004+1 的写出3074362字节(3.1 MB)已复制，5.01017 秒，614 kB/秒
5秒产生了40960个随机数，/proc/sys/kernel/random/entropy_avail会有剧烈的变化，所有随机数产生之后它又会保持在3000左右。